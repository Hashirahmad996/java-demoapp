name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      delay:
        description: 'Delay in minutes before destroy'
        required: false
        default: '0'

jobs:
  destroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./deploy/terraform/oci-vm

    steps:
      - name: Delay if specified
        run: sleep $(( ${{ github.event.inputs.delay }} * 60 ))

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
      
        env:
          TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.TF_VAR_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.TF_VAR_FINGERPRINT }}
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_compartment_ocid: ${{ secrets.TF_VAR_COMPARTMENT_OCID }}
          TF_VAR_vcn_id: ${{ secrets.TF_VAR_VCN_ID }}
          TF_VAR_image_ocid: ${{ secrets.TF_VAR_IMAGE_OCID }}
          TF_VAR_private_key_path: "${{ github.workspace }}/deploy/terraform/oci_vm/private_key.pem"
          TF_VAR_ssh_public_key: "${{ github.workspace }}/deploy/terraform/oci_vm/ssh_key.pub"
        run: terraform init -input=false

      - name: Terraform Destroy
        env:
          TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.TF_VAR_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.TF_VAR_FINGERPRINT }}
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_compartment_ocid: ${{ secrets.TF_VAR_COMPARTMENT_OCID }}
          TF_VAR_vcn_id: ${{ secrets.TF_VAR_VCN_ID }}
          TF_VAR_image_ocid: ${{ secrets.TF_VAR_IMAGE_OCID }}
          TF_VAR_private_key_path: "${{ github.workspace }}/deploy/terraform/oci_vm/private_key.pem"
          TF_VAR_ssh_public_key: "${{ github.workspace }}/deploy/terraform/oci_vm/ssh_key.pub"
        run: terraform destroy -auto-approve -input=false
